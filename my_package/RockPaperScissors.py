import random
import sqlite3

from telebot import types

from Login import bot
from statistic import updateStatistic


class RockPaperScissors:

    @staticmethod
    def getBalance(message):
        balance = 0
        db = sqlite3.connect('../resources/db/JeckaBot.db')
        cur = db.cursor()
        for x in cur.execute("SELECT balance FROM Users where userId=" + str(message.chat.id)):
            balance = x[0]
        db.close()
        return balance

    @staticmethod
    def updateScore(point, message):
        balance = RockPaperScissors.getBalance(message)
        balance = balance + point
        db = sqlite3.connect('../resources/db/JeckaBot.db')
        cur = db.cursor()
        cur.execute("UPDATE Users SET balance = " + str(balance) + " WHERE userId = " + str(message.chat.id))
        db.commit()
        db.close()
        return balance

    @staticmethod
    def GameSSP(message, itog, res=False):
        keygame1 = types.InlineKeyboardMarkup()
        key_Stone = types.InlineKeyboardButton(text='–ö–∞–º–µ–Ω—åü§ú', callback_data='Stone')
        keygame1.add(key_Stone)
        key_Scissors = types.InlineKeyboardButton(text='–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è', callback_data='Scissors')
        keygame1.add(key_Scissors)
        key_Paper = types.InlineKeyboardButton(text='–ë—É–º–∞–≥–∞‚úã', callback_data='Paper')
        keygame1.add(key_Paper)
        key_gameexit = types.InlineKeyboardButton(text='–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', callback_data='gameexit')
        keygame1.add(key_gameexit)
        if itog == "first":
            bot.send_message(message.chat.id, "–ò–≥—Ä–∞–µ–º?", reply_markup=keygame1)
        else:
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                                  text=itog, reply_markup=keygame1)

    @staticmethod
    def rps_handler(call):
        if call.data == "Scissors":
            choice = random.choice(['–ö–∞–º–µ–Ω—åü§ú', '–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è', '–ë—É–º–∞–≥–∞‚úã'])
            Scissors = '–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è'
            if Scissors == choice:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ë–æ–µ–≤–∞—è –Ω–∏—á—å—è!')
                itog = "–ë–æ–µ–≤–∞—è –Ω–∏—á—å—è!"
            else:
                if choice == '–ë—É–º–∞–≥–∞‚úã':
                    balance = RockPaperScissors.updateScore(20, call.message)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}.'.format(
                                              choice) + '\n–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(
                                              balance) + '(+20)')
                    itog = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}.'.format(choice) + '\n–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(
                        balance) + '(+20)'
                else:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è  {}.'.format(
                                              choice))
                    itog = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è  {}.'.format(choice)
            RockPaperScissors.GameSSP(call.message, itog)
        elif call.data == "Stone":
            choice = random.choice(['–ö–∞–º–µ–Ω—åü§ú', '–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è', '–ë—É–º–∞–≥–∞‚úã'])
            Stone = '–ö–∞–º–µ–Ω—åü§ú'
            if Stone == choice:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ë–æ–µ–≤–∞—è –Ω–∏—á—å—è!')
                itog = "–ë–æ–µ–≤–∞—è –Ω–∏—á—å—è!"
            else:
                if choice == '–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è':
                    balance = RockPaperScissors.updateScore(20, call.message)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}.'.format(
                                              choice) + '\n–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(
                                              balance) + '(+20)' + '\n–í–∞—à –±–∞–ª–∞–Ω—Å: ' + balance + '(+20)')
                    itog = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}.'.format(choice) + '\n–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(
                        balance) + '(+20)'
                else:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è  {}.'.format(choice))
                    itog = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è  {}.'.format(choice)
            RockPaperScissors.GameSSP(call.message, itog)
        elif call.data == "Paper":
            choice = random.choice(['–ö–∞–º–µ–Ω—åü§ú', '–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è', '–ë—É–º–∞–≥–∞‚úã'])
            Paper = '–ë—É–º–∞–≥–∞‚úã'
            if Paper == choice:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ë–æ–µ–≤–∞—è –Ω–∏—á—å—è!')
                itog = "–ë–æ–µ–≤–∞—è –Ω–∏—á—å—è!"
            else:
                if choice == '–ö–∞–º–µ–Ω—åü§ú':
                    balance = RockPaperScissors.updateScore(20, call.message)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}.'.format(
                                              choice) + '\n–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(balance) + '(+20)')
                    itog = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}.'.format(choice) + '\n–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(
                        balance) + '(+20)'
                else:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è  {}.'.format(
                                              choice))
                    itog = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è  {}.'.format(choice)
            RockPaperScissors.GameSSP(call.message, itog)
        elif call.data == "gameexit":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ü—Ä–∏—Ö–æ–¥–∏ –µ—â–µ")
        elif call.data == "GameSSP":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã–±—Ä–∞–Ω–æ: –ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã, –ë—É–º–∞–≥–∞\n–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(
                                      RockPaperScissors.getBalance(call.message)))
            RockPaperScissors.GameSSP(call.message, "first")
            updateStatistic(call.message, "GameSSP")
